# This file was generated based on "schema.json". Do not edit manually.

schema {
    query: Queries
    mutation: Mutations
}

scalar Double

union VolskayaResponse = VolskayaFailedResponse | VolskayaSuccessResponse

type CompanyInformation {
    address: String!
    name: String!
    ruc: String!
}

type Coordinate {
    latitude: Double!
    longitude: Double!
}

type Device {
    imei: String
    name: String
    number: String!
    token: String
}

type FavoriteSite {
    address: String!
    coordinate: Coordinate!
    name: String!
}

type Mutations {
    "Volskaya create a user with just a role"
    insertUser(role: Role!): VolskayaResultOptionUser!
    "Volskaya return a user by id"
    updatePassword(id: String!, newPassword: String!, oldPassword: String!): VolskayaResultOptionString!
}

type PersonalInformation {
    dni: String!
    firstName: String!
    lastName: String!
}

type Queries {
    "Volskaya return price of one Route"
    calculatePriceRoute(coordinateFinish: CoordinateInput!, coordinateStart: CoordinateInput!): VolskayaResultOptionVolskayaPrice!
    "Volskaya return a list of users"
    getAllUsers(limit: Int, offset: Int): VolskayaResultListUser!
    "Volskaya return a user by id"
    getUserById(id: String!): VolskayaResultOptionUser!
    "Volskaya return a list of users"
    wakeUpHeroku: String!
}

type User {
    _id: String!
    companyInformation: CompanyInformation
    device: Device
    email: String
    favoriteSites: [FavoriteSite!]
    password: String
    personalInformation: PersonalInformation
    role: Role
    userAuthenticate: UserAuthenticate
}

type UserAuthenticate {
    isAuthenticated: Boolean!
    verificationCode: Int!
}

type VolskayaFailedResponse {
    responseCode: String!
    responseMessage: String!
}

type VolskayaPrice {
    approximateTime: Double!
    co2Saved: Double!
    distance: Double!
    price: Double!
}

type VolskayaResultListUser {
    value: [User!]!
    volskayaResponse: VolskayaResponse!
}

type VolskayaResultOptionString {
    value: String
    volskayaResponse: VolskayaResponse!
}

type VolskayaResultOptionUser {
    value: User
    volskayaResponse: VolskayaResponse!
}

type VolskayaResultOptionVolskayaPrice {
    value: VolskayaPrice
    volskayaResponse: VolskayaResponse!
}

type VolskayaSuccessResponse {
    responseCode: String!
    responseMessage: String!
}

enum Role {
    Client
    Company
    DeliveryCompany
    DeliveryPerson
}

input CoordinateInput {
    latitude: Double!
    longitude: Double!
}
